apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: pulsar-cluster
    meta.helm.sh/release-namespace: pulsar
  creationTimestamp: "2021-10-29T14:50:31Z"
  generation: 76
  labels:
    app: pulsar
    app.kubernetes.io/managed-by: Helm
    chart: pulsar-1.0.32
    cluster: pulsar-cluster
    component: bookkeeper
    heritage: Helm
    release: pulsar-cluster
  name: pulsar-cluster-bookkeeper
  namespace: pulsar
  resourceVersion: "340716148"
  uid: 3a80e6a0-e147-4479-9a66-688ade97c06e
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: pulsar
      component: bookkeeper
      release: pulsar-cluster
  serviceName: pulsar-cluster-bookkeeper
  template:
    metadata:
      annotations:
        checksum/config: e45a01b57a5257d67a86fe0350096152e0d173fc27bcd87f03b0ddab8b10e3a2
        kubectl.kubernetes.io/restartedAt: "2021-11-01T15:53:51-04:00"
        prometheus.io/port: "8000"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: pulsar
        cluster: pulsar-cluster
        component: bookkeeper
        release: pulsar-cluster
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - pulsar
                - key: release
                  operator: In
                  values:
                  - pulsar-cluster
                - key: component
                  operator: In
                  values:
                  - autorecovery
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - |
          bin/apply-config-from-env.py conf/bookkeeper.conf && bin/apply-config-from-env.py conf/bkenv.sh && OPTS="${OPTS} -Dlog4j2.formatMsgNoLookups=true" exec bin/pulsar bookie
        command:
        - sh
        - -c
        envFrom:
        - configMapRef:
            name: pulsar-cluster-bookkeeper
        image: pulsar:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/v1/bookie/is_ready
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        name: pulsar-cluster-bookkeeper
        ports:
        - containerPort: 3181
          name: client
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/v1/bookie/is_ready
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: "2"
            memory: 8Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /pulsar/certs
          name: certs
          readOnly: true
        - mountPath: /pulsar/data/bookkeeper/journal
          name: pulsar-cluster-bookkeeper-journal
        - mountPath: /pulsar/data/bookkeeper/ledgers
          name: pulsar-cluster-bookkeeper-ledgers
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - |-
          until bin/pulsar zookeeper-shell -server pulsar-cluster-zookeeper ls /admin/clusters | grep "^\[.*pulsar-cluster.*\]"; do
            sleep 3;
          done;
        command:
        - sh
        - -c
        image: pulsar:latest
        imagePullPolicy: IfNotPresent
        name: wait-zookeeper-ready
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - args:
        - |
          bin/apply-config-from-env.py conf/bookkeeper.conf && bin/apply-config-from-env.py conf/bkenv.sh && bin/bookkeeper shell metaformat --nonInteractive || true;
        command:
        - sh
        - -c
        envFrom:
        - configMapRef:
            name: pulsar-cluster-bookkeeper
        image: pulsar:latest
        imagePullPolicy: IfNotPresent
        name: pulsar-bookkeeper-metaformat
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 0
        fsGroupChangePolicy: OnRootMismatch
      terminationGracePeriodSeconds: 60
      volumes:
      - name: certs
        secret:
          defaultMode: 420
          secretName: pulsar-tls
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: pulsar-cluster-bookkeeper-journal
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
      storageClassName: pulsar-cluster-bookkeeper-journal
      volumeMode: Filesystem
    status:
      phase: Pending
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: pulsar-cluster-bookkeeper-ledgers
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 52Gi
      storageClassName: pulsar-cluster-bookkeeper-ledgers
      volumeMode: Filesystem
    status:
      phase: Pending
status:
  availableReplicas: 3
  collisionCount: 0
  currentReplicas: 3
  currentRevision: pulsar-cluster-bookkeeper-745b7cfbb5
  observedGeneration: 76
  readyReplicas: 3
  replicas: 3
  updateRevision: pulsar-cluster-bookkeeper-745b7cfbb5
  updatedReplicas: 3
